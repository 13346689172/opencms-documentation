<?xml version="1.0" encoding="UTF-8"?>

<DocumentationHtmls xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="opencms://system/modules/com.alkacon.opencms.documentation/schemas/documentation-html.xsd">
  <DocumentationHtml language="en">
    <Html name="Html0">
      <links/>
      <content><![CDATA[<p>Modules can be structured very fine-grained or very coarse. The structure of choice depends on your use case and personal preferences. So, it's only possible to provide guidelines on how to structure modules and on what to encapsulate in separate modules. Regarding the guidelines, there's not much difference from good code design. Some rules of thumb are:</p>
<ul>
<li>Capture things you want to reuse as separate modules.</li>
<li>Encapsulate functionality, such that each module has strong dependencies in internally, but few (clear defined) dependencies to other modules.</li>
<li>Let your module add real functionality to your system. So let it contain all it needs to add this functionality.</li>
<li>Factor out common functionality used by several other modules.</li>
<li>Never mix website content into a module containing resources to build up the website (such es templates, content type definitions, ...). You may have modules for a website's content - but separated from the modules exposing template JSPs, content types, scripts etc.</li>
</ul>
<p>When you encapsulate resources used to build up your website, there are mainly three different approaches, all with pros and cons.</p>]]></content>
    </Html>
  </DocumentationHtml>
</DocumentationHtmls>
