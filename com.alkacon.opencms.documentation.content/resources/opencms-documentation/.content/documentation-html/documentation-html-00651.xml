<?xml version="1.0" encoding="UTF-8"?>

<DocumentationHtmls xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="opencms://system/modules/com.alkacon.opencms.documentation/schemas/documentation-html.xsd">
  <DocumentationHtml language="en">
    <Html name="Html0">
      <links>
        <link name="link0" internal="true" type="A">
          <target><![CDATA[/sites/default/opencms-documentation/the-opencms-workplace/editors/the-page-editor/]]></target>
          <uuid>772a450b-02c1-11e4-8167-1305b26fecac</uuid>
          <anchor><![CDATA[element_view]]></anchor>
        </link>
        <link name="link1" internal="true" type="A">
          <target><![CDATA[/sites/default/opencms-documentation/creating-a-website/ade-configuration/resource-type-configuration/configuration-of-element-views/]]></target>
          <uuid>944a9ef8-4871-11e4-8008-336f7b60f7b1</uuid>
        </link>
      </links>
      <content><![CDATA[<p>Building up a page with the Apollo template involves two different steps:</p>
<ul>
<li>The layout via layout rows</li>
<li>Adding content</li>
</ul>
<p>Each task has its own <a href="%(link0)">element view</a>: The "Template" view for layout rows and the "Content elements" view for adding content. By using two element views, we get a clearer separation of concerns and also (partly) omits overlapping edit points. The "Content elements" view is a view from the OpenCms core. The "Templates" view is added by the Apollo template. It is located under <code>/system/modules/org.opencms.apollo.template.core/elementviews/</code>. Since it is of type <code>elementview</code>, it is automatically considered as element view by the system, i.e., it appears in all dialogs where element views can be chosen. The name used for the view is set by editing the view content. See&nbsp;<a href="%(link1)">here</a> for details.</p>
<p>The interesting part are the permissions: Element views are only visible to users that have view and read permissions on the element view content. In the demo, the "Template" element view is only visible to editors. This is achieved by setting the permissions on the element view's content accordingly:</p>
<ul>
<li>Overwrite inherited permissions</li>
<li>Add only view and read permissions for the role editor</li>
</ul>
<p>The following figure shows the permissions for the view</p>]]></content>
    </Html>
  </DocumentationHtml>
</DocumentationHtmls>
